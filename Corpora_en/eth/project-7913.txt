Generic algorithms for physics simulations In this project we develop generic high performance algorithms for numerics and physics simulations in C++. Examples include iterative sparse eigensolvers, random number tests, or Monte Carlo simulations. While most algorithms can be formulated in an abstract and generic way, just using properties of the mathematical spaces used in the problem, a computer program usually implements a concrete algorithm, written for one specific representation (e.g. model). Object oriented programming in principle offers the possibility to write the algorithms in a flexible and abstract way, but suffers from a huge performance penalty. Only recently has generic programming in C, using template programming, opened up the possibility to write programs in an abstract and generic way without losing efficiency. We are developing such generic open source software libraries that are useful not only for physics simulations. Specific efforts include: i) The Iterative Eigenproblem Template Library (IETL), a generic library for sparse iterative eigensolvers ii) A generic test suite for random number generators, built on the random number interface proposed for the next revision of the C standard iii) Generic implementations of algorithms for physics simulations, such as Monte Carlo simulations or series expansions
