Physically-Based Animation This project researches physical or physically plausible simulation methods for computer animation, as well as other issues relevant to computer animation for feature films and computer games, such as rendering. Introduction Computer-animated objects and characters are ubiquitous in entertainment and training applications of computer graphics (e.g. videogames, feature films, surgical simulators, etc.). As opposed to tedious and rather inflexible key-frame animation, physics-based simulation offers a concise, but rich and flexible way of defining the behavior of animated objects and characters, by allowing the laws of physics to determine or guide their motion. A concisely defined behavior is particularly important in simulated scenes with many degrees of freedom or interactive applications. Mathematical modeling of physical objects such as rigid bodies, deformable objects, viscous objects and fluids has a long history in mechanical engineering and materials science. In those disciplines, the main objective is to model real-world objects as accurately as possible. In computer graphics, in particular in interactive applications such as videogames or surgery simulators, the primary concern is usually to generate plausible behaviors in a computationally efficient manner. Therefore, the methods devised in computational physics are often neither fast nor stable enough to be used in computer graphics. In our research group, we are working on techniques for simulating deformable models, fluids or fracture effects, and algorithms and data structures for collision detection and response. Our results are being integrated in applications such as videogames, offline animation, haptic rendering, or computational medicine. Our goals are to design efficient and stable simulation techniques, with an emphasis on, but not limited to, interactive applications. Some of the solutions that we propose feature innovative elements such as the use of particle-based Lagrangian methods for fluid and deformable simulation, volumetric and image-based collision detection algorithms for deformable bodies, or perceptuallydriven collision detection algorithms and force models for haptic rendering. Deformation, Cutting, and Fracture The simulation of elastic and plastic objects presents inherent computational challenges due to the large amount of degrees of freedom that must be simulated. We are evaluating different representations and simulation techniques, trying to identify those that are best suited for simulating various elastic, plastic, and topology-varying effects, under different interactivity constraints. Mass-spring systems serve to represent deformable models very efficiently, as the dynamic behavior of the models can be computed by numerically integrating positions and velocities of mass points over time. We intend to investigate the aspects that are responsible for the performance of c ETH Zürich, all rights reserved. Last updated: 06.08.2004 <page 2> mass-spring systems. These include the type and strength of damping, force-deformation relationships between mass points, topological aspects, hierarchical model representations, and last but not least the numerical integration approach. Tetrahedral meshes with finite element methods are another popular approach for simulating deformable models. We have devised fast and stable simulation methods, based on linear elasticity models, stiffness warping, and underlying tetrahedral meshes that drive the deformation and fracture of detailed triangulated surfaces. Furthermore, we have exploited dynamic deformation textures for encoding and solving the 3D elastic deformations of layered deformable objects in 2D parametric atlases. Parallel solution algorithms enable fast simulation of geometrically rich objects under contact, accounting for dynamic effects and the coupling of local deformations and global motion. Recently, particle-based Lagrangian methods have shown tremendous potential for simulating elasto-plastic and fracturing solids. The use of particles instead of a volumetric mesh has several advantages. First, point-sampling of the volume of a given object is very simple in comparison to the generation of a mesh. Second, a particle representation is better suited than a mesh with fixed connectivity for plastic deformations, where the object can deviate substantially from its original configuration and even change its topology. And third, using a particle-based Lagrangian approach enables the combination of deformable solids and fluids into one framework. By integrating particle-based methods with algorithms for handling topological changes on the surface, we have a very flexible framework at hand with which we can simulate both highly detailed surfaces as well as large deformations and topological changes. We demonstrate fracturing both rigid and ductile materials, the simulation of thin shells that fracture, and melting and freezing of objects. The simulation of topological changes on elastic objects can be further accelerated by incorporating crack synthesis algorithms for triangle meshes and visibility graphs for fast local update of the particle-based discretization. This enables, for example, flexible cutting in virtual surgery applications. Finally, we have also devised unconditionally stable animation methods for deformable objects using explicit integration. This is achieved by fitting the original configuration of points (the rest state) to the deformed configuration after an animation step using shape matching techniques. The fitted rest shape yields goal positions for all points. We show that by pulling the animated points towards the goal positions, the animation is unconditionally stable. Collision Detection Collision detection is a fundamental problem in dynamically simulated environments. Most collision detection algorithms focus on rigid bodies and are based on hierarchical object representations, which are computed in a preprocessing step and speed up the actual interference tests at runtime. But these algorithms are not appropriate in case of deformable bodies, since it is usually necessary to update the hierarchical representations frequently. In this project, we investigate efficient collision detection methods that do not require time-consuming preprocessing, for different model representations, such as triangle meshes, volumetric tetrahedral c ETH Zürich, all rights reserved. Last updated: 06.08.2004 <page 3> meshes, or point-set surfaces. Additionally, we address the combination of collision detection with realistic and physically correct collision response. Overview Introduction Deformation, Cutting, and Fracture Collision Detection Fluid Simulation Haptic Rendering Computational Medicine Project Members Past Members Bernd Bickel Bruno Heidelberger Richard Keiser Miguel A. Otaduy Denis Steinemann Martin Wicke Matthias Müller Matthias Teschner Introduction Computer-animated objects and characters are ubiquitous in entertainment and training applications of computer graphics (e.g. videogames, feature films, surgical simulators, etc.). As opposed to tedious and rather inflexible key-frame animation, physics-based simulation offers a concise, but rich and flexible way of defining the behavior of animated objects and characters, by allowing the laws of physics to determine or guide their motion. A concisely defined behavior is particularly important in simulated scenes with many degrees of freedom or interactive applications. Mathematical modeling of physical objects such as rigid bodies, deformable objects, viscous objects and fluids has a long history in mechanical engineering and materials science. In those disciplines, the main objective is to model real-world objects as accurately as possible. In computer graphics, in particular in interactive applications such as videogames or surgery simulators, the primary concern is usually to generate plausible behaviors in a computationally efficient manner. Therefore, the methods devised in computational physics are often neither fast nor stable enough to be used in computer graphics. c ETH Zürich, all rights reserved. Last updated: 06.08.2004 <page 4> In our research group, we are working on techniques for simulating deformable models, fluids or fracture effects, and algorithms and data structures for collision detection and response. Our results are being integrated in applications such as videogames, offline animation, haptic rendering, or computational medicine. Our goals are to design efficient and stable simulation techniques, with an emphasis on, but not limited to, interactive applications. Some of the solutions that we propose feature innovative elements such as the use of particle-based Lagrangian methods for fluid and deformable simulation, volumetric and image-based collision detection algorithms for deformable bodies, or perceptuallydriven collision detection algorithms and force models for haptic rendering. Deformation, Cutting, and Fracture Richard Keiser (keiserinf.ethz.ch), Miguel A. Otaduy (otaduyinf.ethz.ch), Denis Steinemann (denis.steinemanninf.ethz.ch), Martin Wicke (wickeminf.ethz.ch) Publications [Pictures] [Movies] The simulation of elastic and plastic objects presents inherent computational challenges due to the large amount of degrees of freedom that must be simulated. We are evaluating different representations and simulation techniques, trying to identify those that are best suited for simulating various elastic, plastic, and topology-varying effects, under different interactivity constraints. Mass-spring systems serve to represent deformable models very efficiently, as the dynamic behavior of the models can be computed by numerically integrating positions and velocities of mass points over time. We intend to investigate the aspects that are responsible for the performance of mass-spring systems. These include the type and strength of damping, force-deformation relationships between mass points, topological aspects, hierarchical model representations, and last but not least the numerical integration approach. Tetrahedral meshes with finite element methods are another popular approach for simulating deformable models. We have devised fast and stable simulation methods, based on linear elasticity models, stiffness warping, and underlying tetrahedral meshes that drive the deformation and fracture of detailed triangulated surfaces. Furthermore, we have exploited dynamic deformation textures for encoding and solving the 3D elastic deformations of layered deformable objects in 2D parametric atlases. Parallel solution algorithms enable fast simulation of geometrically rich objects under contact, accounting for dynamic effects and the coupling of local deformations and global motion. Recently, particle-based Lagrangian methods have shown tremendous potential for simulating elasto-plastic and fracturing solids. The use of particles instead of a volumetric mesh has several advantages. First, point-sampling of the volume of a given object is very simple in comparison to the generation of a mesh. Second, a particle representation is better suited than a mesh with fixed connectivity for plastic deformations, where the object can deviate substantially from its original configuration and even change its topology. And third, using a particle-based Lagrangian approach enables the combination of deformable solids and fluids into one framework. c ETH Zürich, all rights reserved. Last updated: 06.08.2004 <page 5> By integrating particle-based methods with algorithms for handling topological changes on the surface, we have a very flexible framework at hand with which we can simulate both highly detailed surfaces as well as large deformations and topological changes. We demonstrate fracturing both rigid and ductile materials, the simulation of thin shells that fracture, and melting and freezing of objects. The simulation of topological changes on elastic objects can be further accelerated by incorporating crack synthesis algorithms for triangle meshes and visibility graphs for fast local update of the particle-based discretization. This enables, for example, flexible cutting in virtual surgery applications. Finally, we have also devised unconditionally stable animation methods for deformable objects using explicit integration. This is achieved by fitting the original configuration of points (the rest state) to the deformed configuration after an animation step using shape matching techniques. The fitted rest shape yields goal positions for all points. We show that by pulling the animated points towards the goal positions, the animation is unconditionally stable. Collision Detection Bruno Heidelberger (heidelbergerinf.ethz.ch) Publications [Pictures] [Movies] Collision detection is a fundamental problem in dynamically simulated environments. Most collision detection algorithms focus on rigid bodies and are based on hierarchical object representations, which are computed in a preprocessing step and speed up the actual interference tests at runtime. But these algorithms are not appropriate in case of deformable bodies, since it is usually necessary to update the hierarchical representations frequently. In this project, we investigate efficient collision detection methods that do not require time-consuming preprocessing, for different model representations, such as triangle meshes, volumetric tetrahedral meshes, or point-set surfaces. Additionally, we address the combination of collision detection with realistic and physically correct collision response. Fluid Simulation In this project we develop particle-based Lagrangian methods for simulating fluids and phase transitions between solids and fluids like melting and freezing. The use of particles instead of a volumetric mesh has several advantages for fluid simulation. Advection is very simple using a Lagrangian method compared with standard Eulerian methods, as the material properties move together with the particles. Furthermore, mass conservation is trivially fulfilled and the method does not suffer from dissipation. Finally, using a particle-based Lagrangian approach enables to combine deformable solids and fluids into one framework, which allows simulating phase transitions such as melting and freezing, as well as combining solid and fluid characteristics in goop-like viscoelastic materials such as clay and mucus. Particle-based methods are also specially geared towards interactive fluid simulation. Their high computational efficiency enables interactive simulations with rich effects that cannot be achieved through Eulerian methods. Following this line of research, we have designed interactive algorithms c ETH Zürich, all rights reserved. Last updated: 06.08.2004 <page 6> for particle-based fluid simulation and coupling between fluids and deformable solids. Haptic Rendering Haptics is the science of applying touch-based feedback in human-computer interaction. Imagine a virtual environment displayed in the computer monitor or an immersive virtual reality system. Haptics provide the capability to touch objects, hold them, and feel interaction forces during exploration and manipulation. Six-degree-of-freedom (6-DoF) haptic rendering refers to the contact determination, force computation, and force rendering of the interaction between a manipulated object and its environment. Rendering of rich stimuli (such as crisp contact or forces due to detailed geometry) requires high force update rates, often conflicting with the complexity of the problem. In collaboration with Prof. Ming Lin from the University of North Carolina at Chapel Hill, we have worked on collision detection and haptic rendering algorithms for stable and responsive rendering of the interaction between complex, textured objects. In particular, we exploit observations from psychophysics research for the design of efficient, perceptually-accurate haptic rendering algorithms. Computational Medicine The CoMe project of the National Center of Competence in Research NCCR aims to utilize information technology for improved health care. The contribution of the Computer Graphics Lab is the development of interactive methods for generalized surgery simulation and training. Based on our research in deformable and fracture modeling, collision handling, and point-based computer graphics, we are working on the implementation of a generalized real-time surgical simulator. We are or have been involved in the following projects inside CoMe: Hysteroscopy simulation Simulation of stent placement Craniofacial surgery simulation Orthopedic surgery planning Modeling of soft tissue
