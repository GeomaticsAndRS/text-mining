  PowerDB-OLAP  

Online analytical processing (OLAP) aims at analyzing daily transactions in order to  gain deeper insights into business. Natural requirements of modern OLAP systems are scalability and fast query response times in order to cope with increasing data volumes and to allow interactive usage. Furthermore, analysis of up-to-date data gains in importance, too. A cluster of databases is a cost-effective alternative to mainframes for such systems, offering "scale-out" performance and parallelism. In PowerDB, we favorite a coordination-based architecture: There is a central coordinator that manages the whole cluster. It decides what to store at each component of the cluster, and when and where to execute the incoming queries. In order to meet the performance requirements of OLAP, we deploy replication in the physical database design. This means that queries can be evaluated by several components of the cluster in parallel. Given this, the aim of our research is to develop and evaluate sophisticated routing and scheduling strategies. In more detail, we investigate query routing techniques which take the states of the component caches into account in order to maximize the cache hit rate. An important constraint is that we take the components as "black-boxes": the coordinator considers each component as a transactional storage with an SQL interface. This means that the coordinator is limited to base its routing decisions on derived or approximated data only. We have developed a full-fledged SQL-based cluster prototype including a cache-aware query router. It dynamically approximates the contents of component caches in order to effectively route incoming SQL queries. Considering queries of realistic complexity, e.g., TPC-R, such cache approximation routing proved to be better than state-of-the-art strategies by a factor of two with regard to mean response time. Further research is the development of a "freshness-aware" scheduler. The idea is to allow relaxed freshness of data constraints for queries while still ensuring global correctness with concurrent updates.