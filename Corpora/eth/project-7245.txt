  GIPSY - Generating Integrated Process Support Systems  

GIPSY consists of two subprojects DIPS and CHIPS that investigate related integration issues  in software component development processes. DIPS aims at providing comprehensive integration in Process-centered Software Engineering Environments (PSEEs) for the full software development and deployment lifecycle, whereas CHIPS aims at mechanizing the development of highly integrated tools for individual process steps. DIPS (Distributed Integrated Process Services) investigates the coarse-grain steps of process support to provide a common structure of evolving software products and their processes for tools and developers as well as for users during subsequent software deployment. Processes are defined in a graphical language as Directed Acyclic Graphs (DAGs) specifying a partially ordered set of activities. DIPS provides a process-invariant PSEE framework that enables distributed process definition, enactment, browsing and monitoring, and configuration management and release. It also supports deployment issues such as distribution, installation, instantiation, and removal of software at user-site process repositories, with software components retaining their process metainformation throughout their lifecycle. Unlike in other systems, the process history with product versions is managed in an additional process dimension, tool metainformation is also handled, several processes may be linked together to reflect component dependencies, and process information is used beyond the development phase to support software deployment. DIPS is apparently the only system yet that integrates both development and deployment through a common process modeling language. CHIPS (Components for Highly Integrated Process Support) deals with fine-grain steps of process support to provide data integration on the highest possible level, thereby formalizing dependency semantics in a process. Extensible highly integrated tool components are specified using novel extensible attribute grammars. The components are generated using compiler-compiler techniques and plugged into the DIPS framework after defining a process to provide a complete processspecific PSEE. The concepts have been validated successfully in a prototype implemented in Oberon System 3, including a dynamic WWW demonstration. In the context of the the Virtual Software House (VSH) project that investigates on-line cataloging, marketing and distribution of software components, essential component interoperability information can be provided to potential users. In depth information about GIPSY is available at http://www.tik.ee.ethz.ch/~ gipsy/http://www.tik.ee.ethz.ch/~ gipsy/ \rh .