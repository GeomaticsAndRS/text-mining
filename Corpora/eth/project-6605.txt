  Transactional Process Management in Hospital Information Systems  

Medical information systems are characterized by large contents of data,  stemming from various sources, i.e., distributed, autonomous, and heterogeneous application systems. Patient records, for instance, which have to exist for each patient who has ever been treated in a hospital, contain all data from previous treatments and examinations. The latter encompass, in general, large volumes of multimedia data objects like radiographs or spoken reports. Although these records are stored in a centralized database (patient management system), data is produced by external applications such as, for instance, X-ray systems, and has to be transferred to the patient management system for persistent storage. In general, each department in a medical domain has its own specialized tools and programs. In order to exchange data between departments, interoperability between these applications is required. Hence, data transfer might also require a peer-to-peer communication between these applications rather than transferring data only to the patient management system. In the presence of large images or multimedia objects, this may lead to high data traffic. Most actions that involve more than one department can be divided into a set of self-contained units that take place one after the other. This chain of sub­actions can be very complex, since there are in general several independent departments and a number of distributed tasks involved. Therefore, these dependencies can be considered as a process, or workflow. These processes, as they can be found in real-world applications in medical domains, can be characterized as complex, long­running, and labour­intensive. In particular, they require certain coordination among their constituent steps, mainly in terms of appropriate failure handling strategies and of strategies for synchronizing parallel processes. In various other environments (e.g., banking business), global coordination of processes is mostly solved by distributed transactions orchestrated by TP­monitors on top of database systems. But these products limit the autonomy of applications and impose very strong restrictions which are unrealistic in hospital information systems. Hence, processes in hospital information systems require more flexible transaction models including sophisticated failure handling strategies while avoiding the limitations imposed by traditional transaction models.